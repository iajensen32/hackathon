package com.example.accountservice.dto; // Updated package name

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.Data; // Or add getters/setters manually

/**
 * Data Transfer Object (DTO) for the account information request.
 * Includes validation constraints.
 */
@Data // Lombok annotation for getters, setters, toString, etc.
public class AccountInfoRequest {

    /**
     * Application identifier.
     * Must not be blank and should contain only alphanumeric characters, underscores, or hyphens.
     */
    @NotBlank(message = "Application name cannot be blank.")
    @Size(min = 3, max = 50, message = "Application name must be between 3 and 50 characters.")
    @Pattern(regexp = "^[a-zA-Z0-9_-]+$", message = "Application name must be alphanumeric, underscore, or hyphen.")
    private String application;

    /**
     * Account number.
     * Must not be blank and must be exactly 10 digits.
     */
    @NotBlank(message = "Account number cannot be blank.")
    @Pattern(regexp = "^\\d{10}$", message = "Account number must be exactly 10 digits.")
    private String accountNumber;

    /**
     * Customer number.
     * Must not be blank and must be exactly 8 digits.
     */
    @NotBlank(message = "Customer number cannot be blank.")
    @Pattern(regexp = "^\\d{8}$", message = "Customer number must be exactly 8 digits.")
    private String customerNumber;

    // Constructors, Getters, and Setters are generated by Lombok's @Data
    // If not using Lombok, add them manually.
}
